1
00:00:03,85 --> 00:00:07,18
Le Déboggueur JavaScript permet de naviguer
pas à pas dans du code en JavaScript

2
00:00:07,18 --> 00:00:10,309
ainsi que d'examiner et modifier l'état interne du programme
afin de rechercher et d'éliminer des bogues.
  
3
00:00:10,309 --> 00:00:14,929
Vous pouvez l'utiliser tant pour déboguer
un code s'exécutant localement dans Firefox

4
00:00:14,929 --> 00:00:18,57
que sur du code s'exécutant sur un autre appareil. 
Par exemple sur un appareil fonctionnant sous Firefox OS ou

5
00:00:18,57 --> 00:00:22,859
sur Firefox pour Android. Nous nous focalisons sur le 
debogage local ici,

6
00:00:22,859 --> 00:00:29,859
mais le déboggage à distance est tout-à-fait similaire.
Sur la droite,

7
00:00:30,8 --> 00:00:34,84
vous voyez une liste de l'ensemble des scripts chargés
par la page. Sur la droite,

8
00:00:34,84 --> 00:00:40,1
vous voyez le script sélectionné.
Vous pouvez définir des points d'arrêts.

9
00:00:40,1 --> 00:00:46,629
Vous pouvez entrez dans chaque fonction,

10
00:00:46,629 --> 00:00:53,629
aller directement à sa fin et continuer l'exécution.
Vous pouvez définir des points d'arrêts conditionnels.

11
00:01:08,82 --> 00:01:13,11
Lorsque le programme est arrêté, vous pouvez observer les valeurs
des variables en utilisant ce panneau sur la droite.

12
00:01:13,11 --> 00:01:17,12
Le contexte global: est au bas et les contextes
<fonctionnels: au dessus.

13
00:01:17,12 --> 00:01:20,21
Vous pouvez ajouter des

14
00:01:20,21 --> 00:01:23,87
expressions observées, afin de voir les valeurs de
variables non explicitement listées.

15
00:01:23,87 --> 00:01:30,87
Dans ce panneau, vous pouvez également modifier
la valeur des variables. 

16
00:01:32,09 --> 00:01:37,43
Les résultat est immédiatement utilisé dans le
programme s'exécutant.

17
00:01:37,43 --> 00:01:42,24
Ceci n'est qu'une courte introduction

18
00:01:42,24 --> 00:01:45,37
des possibilités du débuggueur. Pour
en apprendre plus,

19
00:01:45,37 --> 00:01:47,37
vous pouvez visiter developer.mozilla.org