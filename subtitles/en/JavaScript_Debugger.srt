1
00:00:03,85 --> 00:00:07,18
The JavaScript debugger enables you to
step through JavaScript code

2
00:00:07,18 --> 00:00:10,309
and examine and modify its state and help
track down

3
00:00:10,309 --> 00:00:14,929
bugs. You can use it debug code running
locally in Firefox

4
00:00:14,929 --> 00:00:18,57
or code running remotely. For example in a
Firefox OS device or

5
00:00:18,57 --> 00:00:22,859
on Firefox for Android. We look at local
debugging here

6
00:00:22,859 --> 00:00:29,859
but remote debugging is pretty similar. On
the left hand side

7
00:00:30,8 --> 00:00:34,84
you see a list of all the scripts load
by the page. On the right hand side

8
00:00:34,84 --> 00:00:40,1
you see the currently selected script.
You can set breakpoints.

9
00:00:40,1 --> 00:00:46,629
You can step into functions,

10
00:00:46,629 --> 00:00:53,629
run to the end of functions and resume execution.
You can set conditional breakpoints.

11
00:01:08,82 --> 00:01:13,11
When the program is paused, you can see the values
of the variables in this pane on the right.

12
00:01:13,11 --> 00:01:17,12
Global scope is at the bottom and function
scopes is above that.

13
00:01:17,12 --> 00:01:20,21
You can add watch

14
00:01:20,21 --> 00:01:23,87
expressions, to see the values of
variables that aren't explicitly listed.

15
00:01:23,87 --> 00:01:30,87
You can modify the values of variables

16
00:01:32,09 --> 00:01:37,43
in this pane, too. The result is immediately reflected
in the running program.

17
00:01:37,43 --> 00:01:42,24
It's just a really quick introduction

18
00:01:42,24 --> 00:01:45,37
to the capabilities in the debugger. To learn
more,

19
00:01:45,37 --> 00:01:47,37
visit developer.mozilla.org

